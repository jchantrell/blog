---
export const prerender = true;

import BaseLayout from '../../layouts/BaseLayout.astro';
import getPostData from '../../utils/posts';

export async function getStaticPaths(): Promise<any[]> {
  const posts: any[] = await Astro.glob('../../data/posts/*/*.md');
  return posts.map((p: any) => {
    const filePath = p.file.split('/');
    return {
      params: { slug: filePath[filePath.length - 2] },
      props: { post: p },
    };
  });
}

const { Content, frontmatter } = Astro.props.post;
const { title, description, publishDate } = frontmatter;
const { slug, readingTime } = getPostData(Astro.props.post);
const permalink = `${Astro.site?.href}posts/${slug}`;
const githubLink = `https://github.com/jchantrell/blog/commits/main/src/data/posts/${slug}/post.md`;
---

<BaseLayout title={title} description={description} permalink={permalink} current='posts'>
  <header class='text-center mb-2 uppercase font-bold min-w-24 text-[color:var(--text-secondary)]'>
    <h1 class='mb-2'>{title}</h1>
    <p class='text-[color:var(--text-secondary)] m-0'>
      {publishDate} - {readingTime}
    </p>
    <div class='mb-2'>
      {
        frontmatter.tags
          .split(', ')
          .map((tag) => <a class='lowercase mx-1 text-[color:var(--text-muted)]'>{`#${tag}`}</a>)
      }
    </div>
    <hr class='min-w-24' />
  </header>
  <div class='container'>
    <blockquote class='text-sm'>
      This article may change over time due to feedback, corrections and the likes. If something you were relying on is
      missing, the full version history is available <a href={githubLink} target='_blank' class='underline'>here</a>.
    </blockquote>
    <article class='content'>
      <Content />
    </article>
  </div>
</BaseLayout>
