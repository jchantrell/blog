---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Posts from '../../components/Posts.tsx';
import { getCollection } from 'astro:content';
import readingTime from 'reading-time';

const title = 'jchantrell.dev';
const description = 'Latest articles.';
const permalink = `${Astro?.site?.href}posts`;
const query = Astro.url.searchParams.get('q')! || '';
const tags = Astro.url.searchParams.getAll('tags')! || [];

const posts = await getCollection('posts');

const mappedPosts = posts
  .map((post) => ({
    title: post.data.title,
    description: post.data.description,
    image: post.data.image.src,
    tags: post.data.tags.split(',').map((tag: string) => tag.trim()),
    publishDate: post.data.publishDate,
    readingTime: readingTime(post.body).text,
    slug: post.slug || '',
  }))
  .sort((a, b) => new Date(b.publishDate).valueOf() - new Date(a.publishDate).valueOf());
---

<BaseLayout title={title} description={description} permalink={permalink} current='posts'>
  <div class='container mx-2/4'>
    <Posts posts={mappedPosts} query={query} tags={tags} client:load } />
  </div>
</BaseLayout>
